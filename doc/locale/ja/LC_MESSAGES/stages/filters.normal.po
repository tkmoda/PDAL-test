# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2024
# This file is distributed under the same license as the PDAL package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PDAL 2.7.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-08-04 23:14+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: ja\n"
"Language-Team: ja <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.11.0\n"

#: ../../stages/filters.normal.rst:4
msgid "filters.normal"
msgstr ""

#: ../../stages/filters.normal.rst:6
msgid ""
"The **normal filter** returns the estimated normal and curvature for a "
"collection of points. The algorithm first computes the eigenvalues and "
"eigenvectors of the collection of points, which is comprised of the "
"k-nearest neighbors. The normal is taken as the eigenvector corresponding"
" to the smallest eigenvalue. The curvature is computed as"
msgstr ""

#: ../../stages/filters.normal.rst:13
msgid "curvature = \\frac{\\lambda_0}{\\lambda_0 + \\lambda_1 + \\lambda_2}"
msgstr ""

#: ../../stages/filters.normal.rst:17
msgid "where :math:`\\lambda_i` are the eigenvalues sorted in ascending order."
msgstr ""

#: ../../stages/filters.normal.rst:19
msgid ""
"The filter produces four new dimensions (``NormalX``, ``NormalY``, "
"``NormalZ``, and ``Curvature``), which can be analyzed directly, or "
"consumed by downstream stages for more advanced filtering."
msgstr ""

#: ../../stages/filters.normal.rst:23
msgid ""
"The eigenvalue decomposition is performed using Eigen's "
"`SelfAdjointEigenSolver "
"<https://eigen.tuxfamily.org/dox/classEigen_1_1SelfAdjointEigenSolver.html>`_."
msgstr ""

#: ../../stages/filters.normal.rst:26
msgid ""
"Normals will be automatically flipped towards positive Z, unless the "
"always_up_ flag is set to `false`. Users can optionally set any of the "
"XYZ coordinates to specify a custom viewpoint_ or set them all to zero to"
" effectively disable the normal flipping."
msgstr ""

#: ../../stages/filters.normal.rst:33
msgid ""
"By default, the Normal filter will invert normals such that they are "
"always pointed \"up\" (positive Z). If the user provides a viewpoint_, "
"normals will instead be inverted such that they are oriented towards the "
"viewpoint, regardless of the always_up_ flag. To disable all normal "
"flipping, do not provide a viewpoint_ and set `always_up`_ to false."
msgstr ""

#: ../../stages/filters.normal.rst:39
msgid ""
"In addition to always_up_ and viewpoint_, users can run a refinement step"
" (off by default) that propagates normals using a minimum spanning tree. "
"The propagated normals can lead to much more consistent results across "
"the dataset."
msgstr ""

#: ../../stages/filters.normal.rst:45
msgid "To enable normal propagation, users can set refine_ to `true`."
msgstr ""

#: ../../stages/filters.normal.rst:50
msgid "Example"
msgstr ""

#: ../../stages/filters.normal.rst:52
msgid ""
"This pipeline demonstrates the calculation of the normal values (along "
"with curvature). The newly created dimensions are written out to BPF for "
"further inspection."
msgstr ""

#: ../../stages/filters.normal.rst:72
msgid "Options"
msgstr ""

#: ../../stages/filters.normal.rst:75
msgid "_`knn`"
msgstr ""

#: ../../stages/filters.normal.rst:75
msgid "The number of k-nearest neighbors. [Default: 8]"
msgstr ""

#: ../../stages/filters.normal.rst:79
msgid "_`viewpoint`"
msgstr ""

#: ../../stages/filters.normal.rst:78
msgid ""
"A single WKT or GeoJSON 3D point. Normals will be inverted such that they"
" are all oriented towards the viewpoint."
msgstr ""

#: ../../stages/filters.normal.rst:83
msgid "_`always_up`"
msgstr ""

#: ../../stages/filters.normal.rst:82
msgid ""
"A flag indicating whether or not normals should be inverted only when the"
" Z component is negative. [Default: true]"
msgstr ""

#: ../../stages/filters.normal.rst:87
msgid "_`refine`"
msgstr ""

#: ../../stages/filters.normal.rst:86
msgid ""
"A flag indicating whether or not to reorient normals using minimum "
"spanning tree propagation. [Default: false]"
msgstr ""

#: ../../stages/filter_opts.rst:5
msgid "where"
msgstr ""

#: ../../stages/filter_opts.rst:2
msgid ""
"An :ref:`expression <PDAL expression>` that limits points passed to a "
"filter. Points that don't pass the expression skip the stage but are "
"available to subsequent stages in a pipeline. [Default: no filtering]"
msgstr ""

#: ../../stages/filter_opts.rst:13
msgid "where_merge"
msgstr ""

#: ../../stages/filter_opts.rst:8
msgid ""
"A strategy for merging points skipped by a '`where'` option when running "
"in standard mode. If ``true``, the skipped points are added to the first "
"point view returned by the skipped filter. If ``false``, skipped points "
"are placed in their own point view. If ``auto``, skipped points are "
"merged into the returned point view provided that only one point view is "
"returned and it has the same point count as it did when the filter was "
"run. [Default: ``auto``]"
msgstr ""

