# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2024
# This file is distributed under the same license as the PDAL package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PDAL 2.7.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-08-04 23:14+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: ja\n"
"Language-Team: ja <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.11.0\n"

#: ../../stages/filters.greedyprojection.rst:4
msgid "filters.greedyprojection"
msgstr ""

#: ../../stages/filters.greedyprojection.rst:6
msgid ""
"The **Greedy Projection Filter** creates a mesh (triangulation) in an "
"attempt to reconstruct the surface of an area from a collection of "
"points."
msgstr ""

#: ../../stages/filters.greedyprojection.rst:9
msgid ""
"GreedyProjectionTriangulation is an implementation of a greedy "
"triangulation algorithm for 3D points based on local 2D projections. It "
"assumes locally smooth surfaces and relatively smooth transitions between"
" areas with different point densities.  The algorithm itself is identical"
" to that used in the `PCL`_ library."
msgstr ""

#: ../../stages/filters.greedyprojection.rst:21
msgid "Example"
msgstr ""

#: ../../stages/filters.greedyprojection.rst:40
msgid "Options"
msgstr ""

#: ../../stages/filters.greedyprojection.rst:43
msgid "multiplier"
msgstr ""

#: ../../stages/filters.greedyprojection.rst:43
msgid "Nearest neighbor distance multiplier. [Required]"
msgstr ""

#: ../../stages/filters.greedyprojection.rst:46
msgid "radius"
msgstr ""

#: ../../stages/filters.greedyprojection.rst:46
msgid "Search radius for neighbors. [Required]"
msgstr ""

#: ../../stages/filters.greedyprojection.rst:49
msgid "num_neighbors"
msgstr ""

#: ../../stages/filters.greedyprojection.rst:49
msgid "Number of nearest neighbors to consider. [Required]"
msgstr ""

#: ../../stages/filters.greedyprojection.rst:52
msgid "min_angle"
msgstr ""

#: ../../stages/filters.greedyprojection.rst:52
msgid "Minimum angle for created triangles. [Default: 10 degrees]"
msgstr ""

#: ../../stages/filters.greedyprojection.rst:55
msgid "max_angle"
msgstr ""

#: ../../stages/filters.greedyprojection.rst:55
msgid "Maximum angle for created triangles. [Default: 120 degrees]"
msgstr ""

#: ../../stages/filters.greedyprojection.rst:58
msgid "eps_angle"
msgstr ""

#: ../../stages/filters.greedyprojection.rst:58
msgid ""
"Maximum normal difference angle for triangulation consideration. "
"[Default: 45 degrees]"
msgstr ""

#: ../../stages/filter_opts.rst:5
msgid "where"
msgstr ""

#: ../../stages/filter_opts.rst:2
msgid ""
"An :ref:`expression <PDAL expression>` that limits points passed to a "
"filter. Points that don't pass the expression skip the stage but are "
"available to subsequent stages in a pipeline. [Default: no filtering]"
msgstr ""

#: ../../stages/filter_opts.rst:13
msgid "where_merge"
msgstr ""

#: ../../stages/filter_opts.rst:8
msgid ""
"A strategy for merging points skipped by a '`where'` option when running "
"in standard mode. If ``true``, the skipped points are added to the first "
"point view returned by the skipped filter. If ``false``, skipped points "
"are placed in their own point view. If ``auto``, skipped points are "
"merged into the returned point view provided that only one point view is "
"returned and it has the same point count as it did when the filter was "
"run. [Default: ``auto``]"
msgstr ""

