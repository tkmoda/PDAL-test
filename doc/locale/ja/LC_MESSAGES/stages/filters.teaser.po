# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2024
# This file is distributed under the same license as the PDAL package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PDAL 2.7.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-08-04 23:14+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: ja\n"
"Language-Team: ja <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.11.0\n"

#: ../../stages/filters.teaser.rst:4
msgid "filters.teaser"
msgstr ""

#: ../../stages/filters.teaser.rst:6
msgid ""
"The **TEASER filter** uses the Truncated least squares Estimation And "
"SEmidefinite Relaxation (TEASER) algorithm [Yang2020]_ to calculate a "
"**rigid** transformation that best aligns two datasets. The first input "
"to the ICP filter is considered the \"fixed\" points, and all subsequent "
"points are \"moving\" points. The output from the filter are the "
"\"moving\" points after the calculated transformation has been applied, "
"one point view per input. The transformation matrix is inserted into the "
"stage's metadata."
msgstr ""

#: ../../stages/filters.teaser.rst:16
msgid ""
"The plugin wraps the TEASER++ library, which can be found at "
"https://github.com/MIT-SPARK/TEASER-plusplus."
msgstr ""

#: ../../stages/filters.teaser.rst:22
msgid "Examples"
msgstr ""

#: ../../stages/filters.teaser.rst:35
msgid ""
"To get the ``transform`` matrix, you'll need to use the ``--metadata`` "
"option from the pipeline command:"
msgstr ""

#: ../../stages/filters.teaser.rst:42
msgid "The metadata output might start something like:"
msgstr ""

#: ../../stages/filters.teaser.rst:59
msgid ""
"To apply this transformation to other points, the ``centroid`` and "
"``transform`` metadata items can by used with ``filters.transformation`` "
"in another pipeline. First, move the centroid of the points to (0,0,0), "
"then apply the transform, then move the points back to the original "
"location.  For the above metadata, the pipeline would be similar to:"
msgstr ""

#: ../../stages/filters.teaser.rst:92
msgid ""
"The ``composed`` metadata matrix is a composition of the three "
"transformation steps outlined above, and can be used in a single call to "
"``filters.transformation`` as opposed to the three separate calls."
msgstr ""

#: ../../stages/filters.teaser.rst:96
msgid ":ref:`filters.transformation` to apply a transform to other points."
msgstr ""

#: ../../stages/filters.teaser.rst:100
msgid "Options"
msgstr ""

#: ../../stages/filters.teaser.rst:103
msgid "nr"
msgstr ""

#: ../../stages/filters.teaser.rst:103
msgid "Radius to use for normal estimation. [Default: **0.02**]"
msgstr ""

#: ../../stages/filters.teaser.rst:106
msgid "fr"
msgstr ""

#: ../../stages/filters.teaser.rst:106
msgid "Radius to use when computing features. [Default: **0.04**]"
msgstr ""

#: ../../stages/filters.teaser.rst:109
msgid "fpfh"
msgstr ""

#: ../../stages/filters.teaser.rst:109
msgid "Use FPFH to find correspondences? [Default: **true**]"
msgstr ""

#: ../../stages/filter_opts.rst:5
msgid "where"
msgstr ""

#: ../../stages/filter_opts.rst:2
msgid ""
"An :ref:`expression <PDAL expression>` that limits points passed to a "
"filter. Points that don't pass the expression skip the stage but are "
"available to subsequent stages in a pipeline. [Default: no filtering]"
msgstr ""

#: ../../stages/filter_opts.rst:13
msgid "where_merge"
msgstr ""

#: ../../stages/filter_opts.rst:8
msgid ""
"A strategy for merging points skipped by a '`where'` option when running "
"in standard mode. If ``true``, the skipped points are added to the first "
"point view returned by the skipped filter. If ``false``, skipped points "
"are placed in their own point view. If ``auto``, skipped points are "
"merged into the returned point view provided that only one point view is "
"returned and it has the same point count as it did when the filter was "
"run. [Default: ``auto``]"
msgstr ""

