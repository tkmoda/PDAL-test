# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2024
# This file is distributed under the same license as the PDAL package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PDAL 2.7.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-08-04 23:14+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: ja\n"
"Language-Team: ja <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.11.0\n"

#: ../../stages/filters.reciprocity.rst:4
msgid "filters.reciprocity"
msgstr ""

#: ../../stages/filters.reciprocity.rst:6
msgid ""
"The **Nearest-Neighbor Reciprocity Criterion** was introduced in "
"[Weyrich2004]_ and is based on a simple assumption, that valid points may"
" be in the k-neighborhood of an outlier, but the outlier will most likely"
" not be part of the valid point's k-neighborhood."
msgstr ""

#: ../../stages/filters.reciprocity.rst:11
msgid ""
"The author suggests that the Nearest-Neighbor Reciprocity Criterion is "
"more robust than both the :ref:`Plane Fit <filters.planefit>` and "
":ref:`Miniball <filters.miniball>` Criterion, being equally sensitive "
"around smooth and detailed regions. The criterion does however produce "
"invalid results near manifold borders."
msgstr ""

#: ../../stages/filters.reciprocity.rst:17
msgid ""
"The filter creates a single new dimension, ``Reciprocity``, that records "
"the percentage of points(in the range 0 to 100) that are considered uni-"
"directional neighbors of the current point."
msgstr ""

#: ../../stages/filters.reciprocity.rst:23
msgid ""
"To inspect the newly created, non-standard dimensions, be sure to write "
"to an output format that can support arbitrary dimensions, such as BPF."
msgstr ""

#: ../../stages/filters.reciprocity.rst:29
msgid "Example"
msgstr ""

#: ../../stages/filters.reciprocity.rst:31
msgid ""
"The sample pipeline below computes reciprocity with a neighborhood of 8 "
"neighbors, followed by a range filter to crop out points whose "
"``Reciprocity`` percentage is less than 98% before writing the output."
msgstr ""

#: ../../stages/filters.reciprocity.rst:51
msgid "Options"
msgstr ""

#: ../../stages/filters.reciprocity.rst:54
msgid "knn"
msgstr ""

#: ../../stages/filters.reciprocity.rst:54
msgid "The number of k nearest neighbors. [Default: 8]"
msgstr ""

#: ../../stages/filters.reciprocity.rst:57
msgid "threads"
msgstr ""

#: ../../stages/filters.reciprocity.rst:57
msgid ""
"The number of threads to use. Only valid in :ref:`standard mode "
"<processing_modes>`. [Default: 1]"
msgstr ""

#: ../../stages/filter_opts.rst:5
msgid "where"
msgstr ""

#: ../../stages/filter_opts.rst:2
msgid ""
"An :ref:`expression <PDAL expression>` that limits points passed to a "
"filter. Points that don't pass the expression skip the stage but are "
"available to subsequent stages in a pipeline. [Default: no filtering]"
msgstr ""

#: ../../stages/filter_opts.rst:13
msgid "where_merge"
msgstr ""

#: ../../stages/filter_opts.rst:8
msgid ""
"A strategy for merging points skipped by a '`where'` option when running "
"in standard mode. If ``true``, the skipped points are added to the first "
"point view returned by the skipped filter. If ``false``, skipped points "
"are placed in their own point view. If ``auto``, skipped points are "
"merged into the returned point view provided that only one point view is "
"returned and it has the same point count as it did when the filter was "
"run. [Default: ``auto``]"
msgstr ""

