# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2024
# This file is distributed under the same license as the PDAL package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PDAL 2.7.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-08-04 23:14+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: ja\n"
"Language-Team: ja <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.11.0\n"

#: ../../stages/writers.las.rst:4
msgid "writers.las"
msgstr ""

#: ../../stages/writers.las.rst:6
msgid ""
"The **LAS Writer** supports writing to `LAS format`_ files, the standard "
"interchange file format for LIDAR data."
msgstr ""

#: ../../stages/writers.las.rst:11
msgid ""
"Scale/offset are not preserved from an input LAS file.  See below for "
"information on the scale/offset options and the `forward`_ option."
msgstr ""

#: ../../stages/writers.las.rst:19
msgid "VLRs"
msgstr ""

#: ../../stages/writers.las.rst:21
msgid ""
"VLRs can be created by providing a JSON node called `vlrs` with objects "
"as shown:"
msgstr ""

#: ../../stages/writers.las.rst:57
msgid ""
"One of `data`, `filename` or `metadata` must be specified. Data must be "
"specified as base64 encoded strings. The content of a file is inserted as"
" binary. The metadata key specified must refer to a string or base64 "
"encoded data."
msgstr ""

#: ../../stages/writers.las.rst:63
msgid "Example"
msgstr ""

#: ../../stages/writers.las.rst:80
msgid "Options"
msgstr ""

#: ../../stages/writers.las.rst:91
msgid "filename"
msgstr ""

#: ../../stages/writers.las.rst:83
msgid ""
"Output filename. The writer will accept a filename containing a single "
"placeholder character (`#`).  If input to the writer consists of multiple"
" PointViews, each will be written to a separate file, where the "
"placeholder will be replaced with an incrementing integer.  If no "
"placeholder is found, all PointViews provided to the writer are "
"aggregated into a single file for output.  Multiple PointViews are "
"usually the result of using :ref:`filters.splitter`, "
":ref:`filters.chipper` or :ref:`filters.divider`. [Required]"
msgstr ""

#: ../../stages/writers.las.rst:121
msgid "_`forward`"
msgstr ""

#: ../../stages/writers.las.rst:94
msgid ""
"List of header fields whose values should be preserved from a source LAS "
"file.  The option can be specified multiple times, which has the same "
"effect as listing values separated by a comma.  The following values are "
"valid: ``major_version``, ``minor_version``, ``dataformat_id``, "
"``filesource_id``, ``global_encoding``, ``project_id``, ``system_id``, "
"``software_id``, ``creation_doy``, ``creation_year``, ``scale_x``, "
"``scale_y``, ``scale_z``, ``offset_x``, ``offset_y``, ``offset_z``.  In "
"addition, the special value ``header`` can be specified, which is "
"equivalent to specifying all the values EXCEPT the scale and offset "
"values.  Scale and offset values can be forwarded as a group by using the"
" special values ``scale`` and ``offset`` respectively.  The special value"
" ``all`` is equivalent to specifying ``header``, ``scale``, ``offset`` "
"and ``vlr`` (see below). If a header option is specified explicitly, it "
"will override any forwarded header value. If a LAS file is the result of "
"multiple LAS input files, the header values to be forwarded must match or"
" they will be ignored and a default will be used instead."
msgstr ""

#: ../../stages/writers.las.rst:113
msgid ""
"VLRs can be forwarded by using the special value ``vlr``.  VLRs "
"containing the following User IDs are NOT forwarded: ``LASF_Projection``,"
" ``liblas``, ``laszip encoded``.  VLRs with the User ID ``LASF_Spec`` and"
" a record ID other than 0 or 3 are also not forwarded.  These VLRs are "
"known to contain information regarding the formatting of the data and "
"will be rebuilt properly in the output file as necessary.  Unlike header "
"values, VLRs from multiple input files are accumulated and each is "
"written to the output file.  Forwarded VLRs may contain duplicate User "
"ID/Record ID pairs."
msgstr ""

#: ../../stages/writers.las.rst:125
msgid "minor_version"
msgstr ""

#: ../../stages/writers.las.rst:124
msgid ""
"All LAS files are version 1, but the minor version (0 - 4) can be "
"specified with this option. [Default: 2]"
msgstr ""

#: ../../stages/writers.las.rst:129
msgid "software_id"
msgstr ""

#: ../../stages/writers.las.rst:128
msgid ""
"String identifying the software that created this LAS file. [Default: "
"PDAL version num (build num)]\""
msgstr ""

#: ../../stages/writers.las.rst:132
msgid "creation_doy"
msgstr ""

#: ../../stages/writers.las.rst:132
msgid "Number of the day of the year (January 1 == 1) this file is being created."
msgstr ""

#: ../../stages/writers.las.rst:135
msgid "creation_year"
msgstr ""

#: ../../stages/writers.las.rst:135
msgid "Year (Gregorian) this file is being created."
msgstr ""

#: ../../stages/writers.las.rst:151
msgid "dataformat_id"
msgstr ""

#: ../../stages/writers.las.rst:138
msgid ""
"Controls whether information about color and time are stored with the "
"point information in the LAS file. [Default: 3]"
msgstr ""

#: ../../stages/writers.las.rst:141
msgid "0 == no color or time stored"
msgstr ""

#: ../../stages/writers.las.rst:142
msgid "1 == time is stored"
msgstr ""

#: ../../stages/writers.las.rst:143
msgid "2 == color is stored"
msgstr ""

#: ../../stages/writers.las.rst:144
msgid "3 == color and time are stored"
msgstr ""

#: ../../stages/writers.las.rst:145
msgid "4 [Not Currently Supported]"
msgstr ""

#: ../../stages/writers.las.rst:146
msgid "5 [Not Currently Supported]"
msgstr ""

#: ../../stages/writers.las.rst:147
msgid "6 == time is stored (version 1.4+ only)"
msgstr ""

#: ../../stages/writers.las.rst:148
msgid "7 == time and color are stored (version 1.4+ only)"
msgstr ""

#: ../../stages/writers.las.rst:149
msgid "8 == time, color and near infrared are stored (version 1.4+ only)"
msgstr ""

#: ../../stages/writers.las.rst:150
msgid "9 [Not Currently Supported]"
msgstr ""

#: ../../stages/writers.las.rst:151
msgid "10 [Not Currently Supported]"
msgstr ""

#: ../../stages/writers.las.rst:154
msgid "system_id"
msgstr ""

#: ../../stages/writers.las.rst:154
msgid ""
"String identifying the system that created this LAS file. [Default: "
"\"PDAL\"]"
msgstr ""

#: ../../stages/writers.las.rst:158
msgid "a_srs"
msgstr ""

#: ../../stages/writers.las.rst:157
msgid ""
"The spatial reference system of the file to be written. Can be an EPSG "
"string (e.g. \"EPSG:26910\") or a WKT string. [Default: Not set]"
msgstr ""

#: ../../stages/writers.las.rst:163
msgid "global_encoding"
msgstr ""

#: ../../stages/writers.las.rst:161
msgid ""
"Various indicators to describe the data.  See the LAS documentation.  "
"Note that PDAL will always set bit four when creating LAS version 1.4 "
"output. [Default: 0]"
msgstr ""

#: ../../stages/writers.las.rst:166
msgid "project_id"
msgstr ""

#: ../../stages/writers.las.rst:166
msgid "UID reserved for the user [Default: Nil UID]"
msgstr ""

#: ../../stages/writers.las.rst:172
msgid "compression"
msgstr ""

#: ../../stages/writers.las.rst:169
msgid ""
"Set to \"true\" to apply compression to the output, creating a LAZ file "
"(using the LazPerf compressor) instead of a LAS file. For backwards "
"compatibility, \"lazperf\" or \"laszip\" are still accepted, but those "
"values are treated as \"true\". [Default: \"false\"]"
msgstr ""

#: ../../stages/writers.las.rst:180
msgid "scale_x, scale_y, scale_z"
msgstr ""

#: ../../stages/writers.las.rst:175
msgid ""
"Scale to be divided from the X, Y and Z nominal values, respectively, "
"after the offset has been applied.  The special value ``auto`` can be "
"specified, which causes the writer to select a scale to set the stored "
"values of the dimensions to range from [0, 2147483647].  [Default: .01]"
msgstr ""

#: ../../stages/writers.las.rst:180 ../../stages/writers.las.rst:188
msgid "Note: written value = (nominal value - offset) / scale."
msgstr ""

#: ../../stages/writers.las.rst:188
msgid "offset_x, offset_y, offset_z"
msgstr ""

#: ../../stages/writers.las.rst:183
msgid ""
"Offset to be subtracted from the X, Y and Z nominal values, respectively,"
" before the value is scaled.  The special value ``auto`` can be "
"specified, which causes the writer to set the offset to the minimum value"
" of the dimension.  [Default: 0]"
msgstr ""

#: ../../stages/writers.las.rst:192
msgid "filesource_id"
msgstr ""

#: ../../stages/writers.las.rst:191
msgid ""
"The file source id number to use for this file (a value between 0 and "
"65535 - 0 implies \"unassigned\") [Default: 0]"
msgstr ""

#: ../../stages/writers.las.rst:197
msgid "discard_high_return_numbers"
msgstr ""

#: ../../stages/writers.las.rst:195
msgid ""
"If true, discard all points with a return number greater than the maximum"
" supported by the point format (5 for formats 0-5, 15 for formats 6-10). "
"[Default: false]"
msgstr ""

#: ../../stages/writers.las.rst:218
msgid "extra_dims"
msgstr ""

#: ../../stages/writers.las.rst:200
msgid ""
"Extra dimensions to be written as part of each point beyond those "
"specified by the LAS point format.  The format of the option is "
"``<dimension_name>=<type> [, ...]``.  Any valid PDAL :ref:`type <types>` "
"can be specified."
msgstr ""

#: ../../stages/writers.las.rst:205
msgid ""
"The special value ``all`` can be used in place of a dimension/type list "
"to request that all dimensions that can't be stored in the predefined LAS"
" point record get added as extra data at the end of each point record."
msgstr ""

#: ../../stages/writers.las.rst:209
msgid ""
"PDAL writes an extra bytes VLR (User ID: LASF_Spec, Record ID: 4) when "
"extra dims are written.  The VLR describes the extra dimensions specified"
" by this option.  Note that reading of this VLR is only specified for LAS"
" version 1.4, though some systems will honor it for earlier file formats."
" The :ref:`LAS reader <readers.las>` requires the option use_eb_vlr in "
"order to read the extra bytes VLR for files written with 1.1 - 1.3 LAS "
"format."
msgstr ""

#: ../../stages/writers.las.rst:217
msgid ""
"Setting --verbose=Info will provide output on the names, types and order "
"of dimensions being written as part of the LAS extra bytes."
msgstr ""

#: ../../stages/writers.las.rst:222
msgid "pdal_metadata"
msgstr ""

#: ../../stages/writers.las.rst:221
msgid ""
"Write two VLRs containing `JSON`_ output with both the :ref:`metadata` "
"and :ref:`pipeline` serialization. [Default: false]"
msgstr ""

#: ../../stages/writers.las.rst:225
msgid "vlrs"
msgstr ""

#: ../../stages/writers.las.rst:225
msgid "Add VLRS specified as json. See `VLRs`_ above for details."
msgstr ""

#: ../../stages/writer_opts.rst:5
msgid "where"
msgstr ""

#: ../../stages/writer_opts.rst:2
msgid ""
"An :ref:`expression <PDAL expression>` that limits points passed to a "
"writer. Points that don't pass the expression skip the stage but are "
"available to subsequent stages in a pipeline. [Default: no filtering]"
msgstr ""

#: ../../stages/writer_opts.rst:13
msgid "where_merge"
msgstr ""

#: ../../stages/writer_opts.rst:8
msgid ""
"A strategy for merging points skipped by a '`where'` option when running "
"in standard mode. If ``true``, the skipped points are added to the first "
"point view returned by the skipped filter. If ``false``, skipped points "
"are placed in their own point view. If ``auto``, skipped points are "
"merged into the returned point view provided that only one point view is "
"returned and it has the same point count as it did when the writer was "
"run. [Default: ``auto``]"
msgstr ""

