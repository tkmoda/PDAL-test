# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2024
# This file is distributed under the same license as the PDAL package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PDAL 2.7.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-08-04 23:14+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: ja\n"
"Language-Team: ja <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.11.0\n"

#: ../../stages/writers.pgpointcloud.rst:4
msgid "writers.pgpointcloud"
msgstr ""

#: ../../stages/writers.pgpointcloud.rst:6
msgid ""
"The **PostgreSQL Pointcloud Writer** allows you to write to PostgreSQL "
"database that have the `PostgreSQL Pointcloud`_ extension enabled. The "
"Pointcloud extension stores point cloud data in tables that contain rows "
"of patches. Each patch in turn contains a large number of spatially "
"nearby points."
msgstr ""

#: ../../stages/writers.pgpointcloud.rst:11
msgid ""
"While you can theoretically store the contents of a whole file of points "
"in a single patch, it is more practical to store a table full of smaller "
"patches, where the patches are under the PostgreSQL page size (8kb). For "
"most LIDAR data, this practically means a patch size of between 400 and "
"600 points."
msgstr ""

#: ../../stages/writers.pgpointcloud.rst:16
msgid ""
"In order to create patches of the right size, the Pointcloud writer "
"should be preceded in the pipeline file by :ref:`filters.chipper`."
msgstr ""

#: ../../stages/writers.pgpointcloud.rst:19
msgid ""
"The pgpointcloud format does not support WKT spatial reference "
"specifications.  A subset of spatial references can be stored by using "
"the 'srid' option, which allows storage of an `EPSG code`_ that covers "
"many common spatial references. PDAL makes no attempt to reproject data "
"to your specified srid.  Use :ref:`filters.reprojection` for this "
"purpose."
msgstr ""

#: ../../stages/writers.pgpointcloud.rst:27
msgid "Example"
msgstr ""

#: ../../stages/writers.pgpointcloud.rst:52
msgid "Options"
msgstr ""

#: ../../stages/writers.pgpointcloud.rst:55
msgid "connection"
msgstr ""

#: ../../stages/writers.pgpointcloud.rst:55
msgid ""
"PostgreSQL connection string. In the form *\"host=hostname "
"dbname=database user=username password=pw port=5432\"* [Required]"
msgstr ""

#: ../../stages/writers.pgpointcloud.rst:58
msgid "table"
msgstr ""

#: ../../stages/writers.pgpointcloud.rst:58
msgid "Database table to write to. [Required]"
msgstr ""

#: ../../stages/writers.pgpointcloud.rst:61
msgid "schema"
msgstr ""

#: ../../stages/writers.pgpointcloud.rst:61
msgid "Database schema to write to. [Default: \"public\"]"
msgstr ""

#: ../../stages/writers.pgpointcloud.rst:64
msgid "column"
msgstr ""

#: ../../stages/writers.pgpointcloud.rst:64
msgid "Table column to put patches into. [Default: \"pa\"]"
msgstr ""

#: ../../stages/writers.pgpointcloud.rst:71
msgid "compression"
msgstr ""

#: ../../stages/writers.pgpointcloud.rst:67
msgid "Patch compression type to use. [Default: \"\"dimensional\"\"]"
msgstr ""

#: ../../stages/writers.pgpointcloud.rst:69
msgid "**none** applies no compression"
msgstr ""

#: ../../stages/writers.pgpointcloud.rst:70
msgid "**dimensional** applies dynamic compression to each dimension separately"
msgstr ""

#: ../../stages/writers.pgpointcloud.rst:71
msgid ""
"**lazperf** applies a \"laz\" compression (using the `laz-perf`_ library "
"in PostgreSQL Pointcloud)"
msgstr ""

#: ../../stages/writers.pgpointcloud.rst:75
msgid "overwrite"
msgstr ""

#: ../../stages/writers.pgpointcloud.rst:74
msgid ""
"To drop the table before writing set to 'true'. To append to the table "
"set to 'false'. [Default: false]"
msgstr ""

#: ../../stages/writers.pgpointcloud.rst:79
msgid "srid"
msgstr ""

#: ../../stages/writers.pgpointcloud.rst:78
msgid ""
"Spatial reference ID (relative to the `spatial_ref_sys` table in PostGIS)"
" to store with the point cloud schema. [Default: 4326]"
msgstr ""

#: ../../stages/writers.pgpointcloud.rst:84
msgid "pcid"
msgstr ""

#: ../../stages/writers.pgpointcloud.rst:82
msgid ""
"An optional existing PCID to use for the point cloud schema. If "
"specified, the schema must be present. If not specified, a match will "
"still be looked for, or a new schema will be inserted. [Default: 0]"
msgstr ""

#: ../../stages/writers.pgpointcloud.rst:89
msgid "pre_sql"
msgstr ""

#: ../../stages/writers.pgpointcloud.rst:87
msgid ""
"SQL to execute *before* running the translation. If the value references "
"a file, the file is read and any SQL inside is executed. Otherwise the "
"value is executed as SQL itself. [Optional]"
msgstr ""

#: ../../stages/writers.pgpointcloud.rst:94
msgid "post_sql"
msgstr ""

#: ../../stages/writers.pgpointcloud.rst:92
msgid ""
"SQL to execute *after* running the translation. If the value references a"
" file, the file is read and any SQL inside is executed. Otherwise the "
"value is executed as SQL itself. [Optional]"
msgstr ""

#: ../../stages/writers.pgpointcloud.rst:102
msgid "scale_x, scale_y, scale_z / offset_x, offset_y, offset_z"
msgstr ""

#: ../../stages/writers.pgpointcloud.rst:97
msgid ""
"If ANY of these options are specified the X, Y and Z dimensions are "
"adjusted by subtracting the offset and then dividing the values by the "
"specified scaling factor before being written as 32-bit integers (as "
"opposed to double precision values).  If any of these options is "
"specified, unspecified scale_<x,y,x> options are given the value of 1.0 "
"and unspecified offset_<x,y,z> are given the value of 0.0."
msgstr ""

#: ../../stages/writers.pgpointcloud.rst:106
msgid "output_dims"
msgstr ""

#: ../../stages/writers.pgpointcloud.rst:105
msgid ""
"If specified, limits the dimensions written for each point.  Dimensions "
"are listed by name and separated by commas."
msgstr ""

#: ../../stages/writer_opts.rst:5
msgid "where"
msgstr ""

#: ../../stages/writer_opts.rst:2
msgid ""
"An :ref:`expression <PDAL expression>` that limits points passed to a "
"writer. Points that don't pass the expression skip the stage but are "
"available to subsequent stages in a pipeline. [Default: no filtering]"
msgstr ""

#: ../../stages/writer_opts.rst:13
msgid "where_merge"
msgstr ""

#: ../../stages/writer_opts.rst:8
msgid ""
"A strategy for merging points skipped by a '`where'` option when running "
"in standard mode. If ``true``, the skipped points are added to the first "
"point view returned by the skipped filter. If ``false``, skipped points "
"are placed in their own point view. If ``auto``, skipped points are "
"merged into the returned point view provided that only one point view is "
"returned and it has the same point count as it did when the writer was "
"run. [Default: ``auto``]"
msgstr ""

