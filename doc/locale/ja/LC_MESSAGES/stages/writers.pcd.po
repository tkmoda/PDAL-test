# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2024
# This file is distributed under the same license as the PDAL package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PDAL 2.7.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-08-04 23:14+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: ja\n"
"Language-Team: ja <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.11.0\n"

#: ../../stages/writers.pcd.rst:4
msgid "writers.pcd"
msgstr ""

#: ../../stages/writers.pcd.rst:6
msgid ""
"The **PCD Writer** supports writing to `Point Cloud Data (PCD)`_ "
"formatted files, which are used by the `Point Cloud Library (PCL)`_."
msgstr ""

#: ../../stages/writers.pcd.rst:9
msgid ""
"By default, compression is not enabled, and the PCD writer will output "
"ASCII formatted data."
msgstr ""

#: ../../stages/writers.pcd.rst:18
msgid ""
"X, Y, and Z dimensions will be written as single-precision floats by "
"default to be compatible with most of the existing PCL point types. These"
" dimensions can be forced to double-precision using the `order` option, "
"but the PCL code reading this data must be capable of reading double-"
"precision fields (i.e., it is not the responsibility of PDAL to ensure "
"this compatibility)."
msgstr ""

#: ../../stages/writers.pcd.rst:27
msgid ""
"When working with large coordinate values it is recommended that users "
"first translate the coordinate values using :ref:`filters.transformation`"
" to avoid loss of precision when writing single-precision XYZ data."
msgstr ""

#: ../../stages/writers.pcd.rst:33
msgid "Example"
msgstr ""

#: ../../stages/writers.pcd.rst:49
msgid "Options"
msgstr ""

#: ../../stages/writers.pcd.rst:52
msgid "filename"
msgstr ""

#: ../../stages/writers.pcd.rst:52
msgid "PCD file to write [Required]"
msgstr ""

#: ../../stages/writers.pcd.rst:56
msgid "compression"
msgstr ""

#: ../../stages/writers.pcd.rst:55
msgid ""
"Level of PCD compression to use (ascii, binary, compressed) [Default: "
"\"ascii\"]"
msgstr ""

#: ../../stages/writers.pcd.rst:60
msgid "_`precision`"
msgstr ""

#: ../../stages/writers.pcd.rst:59
msgid ""
"Decimal Precision for output of values. This can be overridden for "
"individual dimensions using the order option. [Default: 2]"
msgstr ""

#: ../../stages/writers.pcd.rst:69
msgid "_`order`"
msgstr ""

#: ../../stages/writers.pcd.rst:63
msgid ""
"Comma-separated list of dimension names in the desired output order. For "
"example \"X,Y,Z,Red,Green,Blue\". Dimension names can optionally be "
"followed by a PDAL type (e.g., Unsigned32) and dimension-specific "
"precision (used only with \"ascii\" compression).  Ex: \"X=Float:2, "
"Y=Float:2, Z=Float:3, Intensity=Unsigned32\" If no precision is specified"
" the value provided with the precision_ option is used.  The default "
"dimension type is double precision float. [Default: none]"
msgstr ""

#: ../../stages/writers.pcd.rst:73
msgid "keep_unspecified"
msgstr ""

#: ../../stages/writers.pcd.rst:72
msgid ""
"If true, writes all dimensions. Dimensions specified with the order_ "
"option precede those not specified. [Default: **true**]"
msgstr ""

#: ../../stages/writer_opts.rst:5
msgid "where"
msgstr ""

#: ../../stages/writer_opts.rst:2
msgid ""
"An :ref:`expression <PDAL expression>` that limits points passed to a "
"writer. Points that don't pass the expression skip the stage but are "
"available to subsequent stages in a pipeline. [Default: no filtering]"
msgstr ""

#: ../../stages/writer_opts.rst:13
msgid "where_merge"
msgstr ""

#: ../../stages/writer_opts.rst:8
msgid ""
"A strategy for merging points skipped by a '`where'` option when running "
"in standard mode. If ``true``, the skipped points are added to the first "
"point view returned by the skipped filter. If ``false``, skipped points "
"are placed in their own point view. If ``auto``, skipped points are "
"merged into the returned point view provided that only one point view is "
"returned and it has the same point count as it did when the writer was "
"run. [Default: ``auto``]"
msgstr ""

