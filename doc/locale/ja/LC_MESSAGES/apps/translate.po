# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2024
# This file is distributed under the same license as the PDAL package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PDAL 2.7.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-08-04 23:14+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: ja\n"
"Language-Team: ja <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.11.0\n"

#: ../../apps/translate.rst:5
msgid "translate"
msgstr ""

#: ../../apps/translate.rst:7
msgid ""
"The ``translate`` command can be used for simple conversion of files "
"based on their file extensions. It can also be used for constructing "
"pipelines directly from the command-line.  By default, processing is done"
" in stream mode if possible, standard mode if not."
msgstr ""

#: ../../apps/translate.rst:31
msgid "The ``--input`` and ``--output`` file names are required options."
msgstr ""

#: ../../apps/translate.rst:33
msgid ""
"If provided, the ``--pipeline`` option will write the pipeline "
"constructed from the command-line arguments to the specified file.  The "
"translate command will not actually run when this argument is given."
msgstr ""

#: ../../apps/translate.rst:37
msgid ""
"The ``--json`` flag can use used to specify a PDAL pipeline from which "
"filters will be extracted.  If a reader or writer exist in the pipeline, "
"they will be removed and replaced with the input and output provided on "
"the command line.  If a reader/writer stage references tags in the "
"provided pipeline, the overriding files will assume those tags.  If the "
"argument to the ``--json`` option references an existing file, it is "
"assumed that the file contains the pipeline to be processed.  If the "
"argument value is not a filename, it is taken to be a literal JSON string"
" that is the pipeline.  The flag can't be used if filters are listed on "
"the command line or explicitly with the ``--filter`` option."
msgstr ""

#: ../../apps/translate.rst:49
msgid ""
"The ``--filter`` flag is optional. It is used to specify drivers used to "
"filter the data. ``--filter`` accepts multiple arguments if provided, "
"thus constructing a multi-stage filtering operation.  Filters can't be "
"specified using this method and with the ``--json`` flag."
msgstr ""

#: ../../apps/translate.rst:54
msgid ""
"The ``--metadata`` flag accepts a filename for the output of metadata "
"associated with the execution of the translate operation."
msgstr ""

#: ../../apps/translate.rst:57
msgid ""
"If no ``--reader`` or ``--writer`` type are given, PDAL will attempt to "
"infer the correct drivers from the input and output file name extensions "
"respectively."
msgstr ""

#: ../../apps/translate.rst:61
msgid "Example 1:"
msgstr ""

#: ../../apps/translate.rst:63
msgid ""
"The ``translate`` command can be augmented by specifying fully specified "
"options at the command-line invocation. For example, the following "
"invocation will translate ``1.2-with-color.las`` to ``output.laz`` while "
"doing the following:"
msgstr ""

#: ../../apps/translate.rst:68
msgid "Setting the creation day of year to 42"
msgstr ""

#: ../../apps/translate.rst:69
msgid "Setting the creation year to 2014"
msgstr ""

#: ../../apps/translate.rst:70
msgid "Setting the LAS point format to 1"
msgstr ""

#: ../../apps/translate.rst:71
msgid "Cropping the file with the given polygon"
msgstr ""

#: ../../apps/translate.rst:85
msgid "Example 2:"
msgstr ""

#: ../../apps/translate.rst:87
msgid ""
"Given these tools, we can now construct a custom pipeline on-the-fly. The"
" example below uses a simple LAS reader and writer, but stages a voxel "
"grid filter, followed by the SMRF filter and a range filter. We can even "
"set stage-specific parameters as shown."
msgstr ""

#: ../../apps/translate.rst:98
msgid "Example 3:"
msgstr ""

#: ../../apps/translate.rst:100
msgid ""
"This command reads the input text file \"myfile\" and writes an output "
"LAS file \"output.las\", processing the data through the stats filter.  "
"The metadata output (including the output from the stats filter) is "
"written to the file \"meta.json\"."
msgstr ""

#: ../../apps/translate.rst:111
msgid "Example 4:"
msgstr ""

#: ../../apps/translate.rst:113
msgid ""
"This command reprojects the points in the file \"input.las\" to another "
"spatial reference system and writes the result to the file "
"\"output.las\"."
msgstr ""

