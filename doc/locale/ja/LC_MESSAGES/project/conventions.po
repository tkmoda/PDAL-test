# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2024
# This file is distributed under the same license as the PDAL package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PDAL 2.7.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-08-04 23:14+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: ja\n"
"Language-Team: ja <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.11.0\n"

#: ../../project/conventions.rst:5
msgid "Coding Conventions"
msgstr ""

#: ../../project/conventions.rst:7
msgid ""
"To the extent possible and reasonable, we value consistency of source "
"code formatting, class and variable naming, and so forth.  Please follow "
"existing code, rather than introducing your own (of course, better) "
"formatting or change existing code unless you're changing behavior."
msgstr ""

#: ../../project/conventions.rst:12
msgid ""
"This note lists some such conventions that we would like to follow, where"
" it makes sense to do so."
msgstr ""

#: ../../project/conventions.rst:16
msgid "Source Formatting"
msgstr ""

#: ../../project/conventions.rst:18
msgid ""
"We use astyle (http://astyle.sourceforge.net) as a tool to reformat C++ "
"source code files in a consistent fashion.  The file astylerc, at the top"
" of the github repo, contains the default settings we use."
msgstr ""

#: ../../project/conventions.rst:22
msgid "Our conventions are:"
msgstr ""

#: ../../project/conventions.rst:24
msgid "Lines should be kept to 80 characters where reasonable."
msgstr ""

#: ../../project/conventions.rst:26
msgid "LF endings (unix style), not CRLF (windows style)"
msgstr ""

#: ../../project/conventions.rst:28
msgid "spaces, not tabs"
msgstr ""

#: ../../project/conventions.rst:30
msgid ""
"indent to four (4) spaces (\"Four shalt be the number thou shalt count, "
"and the number of the counting shall be four. Three shalt thou not count,"
" neither count thou five...\")"
msgstr ""

#: ../../project/conventions.rst:34
msgid "braces shall be on their own lines, like this::"
msgstr ""

#: ../../project/conventions.rst:41
msgid "copyright header, license, and author(s) on every file"
msgstr ""

#: ../../project/conventions.rst:43
msgid "two spaces between major units, e.g. function bodies"
msgstr ""

#: ../../project/conventions.rst:47
msgid "Naming Conventions"
msgstr ""

#: ../../project/conventions.rst:49
msgid "classes should be names using UpperCamelCase"
msgstr ""

#: ../../project/conventions.rst:51
msgid "functions should be in lowerCamelCase"
msgstr ""

#: ../../project/conventions.rst:53
msgid ""
"member variables should be prefixed with \"m\\_\", followed by the name "
"in lowerCamelCase -- for example, \"m_numberOfPoints\""
msgstr ""

#: ../../project/conventions.rst:56
msgid ""
"there should be one class per file, and the name of the file should match"
" the class name -- that is, class PointData should live in files "
"PointData.hpp and PointData.cpp."
msgstr ""

#: ../../project/conventions.rst:62
msgid "Other Conventions"
msgstr ""

#: ../../project/conventions.rst:64
msgid ""
"Surround all code with \"namespace pdal {...}\"; where justifiable, you "
"may introduce a nested namespace."
msgstr ""

#: ../../project/conventions.rst:67
msgid ""
"All exceptions that are not caught internally should be of type "
"pdal_error. Exceptions used as local error handling should always be "
"caught."
msgstr ""

#: ../../project/conventions.rst:70
msgid ""
"Don't put member function bodies in the class declaration in the header "
"file, unless clearly justified for performance reasons. Use the "
"\"inline\" keyword in these cases(?)."
msgstr ""

#: ../../project/conventions.rst:74
msgid "Use const."
msgstr ""

#: ../../project/conventions.rst:76
msgid "Don't put \"using\" declarations in headers."
msgstr ""

#: ../../project/conventions.rst:78
msgid "Document all public (and protected) member functions using doxygen markup."
msgstr ""

#: ../../project/conventions.rst:82
msgid "#include Conventions"
msgstr ""

#: ../../project/conventions.rst:84
msgid ""
"For public headers from the ./include/pdal directory, use angle brackets:"
" #include <pdal/Stage.h>"
msgstr ""

#: ../../project/conventions.rst:87
msgid ""
"For private headers (from somewhere in ./src), use quotes: #include "
"\"Support.hpp\""
msgstr ""

#: ../../project/conventions.rst:90
msgid ""
"Don't #include a file where a simple forward declaration will do. (Note: "
"this only applies to pdal files; don't forward declare from system or 3rd"
" party headers.)"
msgstr ""

#: ../../project/conventions.rst:94
msgid ""
"Don't include a file unless it actually is required to compile the source"
" unit."
msgstr ""

#: ../../project/conventions.rst:96
msgid ""
"Don't use manual include guards. All reasonable compilers support the "
"once pragma::"
msgstr ""

